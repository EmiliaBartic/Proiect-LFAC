%{
#include <stdio.h>
extern FILE* yyin;
extern char* yytext;
extern int yylineno;

%}


%union {
int intval;
char* strval;
float floatval;
char charval;
struct expr_info* expr_ptr;
}
%token ID ID_FCT TIP_VAR TIP_VECTOR TIP_UDEF TIP_FCT BGIN END ASSIGN NR 
%token <strval>STRING 
%token <floatval>FLOATNR
%token <charval> CARAC
%token <bool>BOOLV
%token <intval>INTNR

%start progr
%%
progr : line bloc {printf("program corect sintactic\n");} 
      ;


line : declaratie ';'
     | assignment ';' 
     | functie '}'
     ;
declaratie : TIP_VAR ID
	   | TIP_VAR ID ASSIGN NR
	   | TIP_VECTOR ID '['NR']'
	   | TIP_UDEF ID '{' decl_struct '}'
           ;
decl_struct: declaratie_struct
	   ;
declaratie_struct: TIP_VAR ID';' 
		 | TIP_VAR ID';' TIP_VAR ID';' 
	         | TIP_VAR ID';' TIP_VAR ID';' TIP_VAR ID';'
	         | TIP_VECTOR ID '['NR']'';'
	         | TIP_VECTOR ID '['NR']'';' TIP_VECTOR ID '['NR']'';'
           ;
assignment : ID ASSIGN ID 
           | ID ASSIGN NR 
	   ;

functie : TIP_FCT ID_FCT '('parametrii')' '{' bloc '}' ;
parametrii: TIP_VAR ID ',' | TIP_VAR ID ;
bloc : BGIN line END
     ;
		 
%%

int yyerror(char * s){
printf("eroare: %s la linia:%d\n",s,yylineno);
}



int main(){
 yyparse();
}    